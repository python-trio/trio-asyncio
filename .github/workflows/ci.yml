name: CI

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:

jobs:
  Windows:
    name: 'Windows (${{ matrix.python }}, ${{ matrix.arch }}${{ matrix.extra_name }})'
    timeout-minutes: 20
    runs-on: 'windows-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10']
        arch: ['x86', 'x64']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python }}'
          architecture: '${{ matrix.arch }}'
      - name: Run tests
        run: ./ci.sh
        shell: bash
        env:
          # Should match 'name:' up above
          JOB_NAME: 'Windows (${{ matrix.python }}, ${{ matrix.arch }}${{ matrix.extra_name }})'

  Ubuntu:
    name: 'Ubuntu (${{ matrix.python }}${{ matrix.extra_name }})'
    timeout-minutes: 10
    runs-on: 'ubuntu-latest'
    strategy:
      fail-fast: false
      matrix:
        # No pypy-3.7 because Trio doesn't support it (nightly is fine, it has a fix we need)
        python: ['3.7', '3.8', '3.9', '3.10', '3.9-dev', '3.10-dev']
        check_formatting: ['0']
        check_docs: ['0']
        pypy_nightly_branch: ['']
        extra_name: ['']
        include:
          - python: '3.9'
            check_formatting: '1'
            extra_name: ', check formatting'
        # pypy3.7-nightly produces an "OSError: handle is closed" in the
        # bowels of multiprocessing after all tests appear to complete successfully
        #  - python: '3.7'  # <- not actually used
        #    pypy_nightly_branch: 'py3.7'
        #    extra_name: ', pypy 3.7 nightly'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        if: "!endsWith(matrix.python, '-dev')"
        with:
          python-version: '${{ matrix.python }}'
      - name: Setup python (dev)
        uses: deadsnakes/action@v2.0.2
        if: endsWith(matrix.python, '-dev')
        with:
          python-version: '${{ matrix.python }}'
      - name: Install python testsuite
        if: endsWith(matrix.python, '-dev')
        run: |
          version=$(echo $PYVERSION | sed 's/-dev//')
          sudo apt-get install -y --no-install-recommends libpython${version}-testsuite
        env:
          PYVERSION: '${{ matrix.python }}'
      - name: Run tests
        run: ./ci.sh
        env:
          PYPY_NIGHTLY_BRANCH: '${{ matrix.pypy_nightly_branch }}'
          CHECK_FORMATTING: '${{ matrix.check_formatting }}'
          CHECK_DOCS: '${{ matrix.check_docs }}'
          # Should match 'name:' up above
          JOB_NAME: 'Ubuntu (${{ matrix.python }}${{ matrix.extra_name }})'

  macOS:
    name: 'macOS (${{ matrix.python }})'
    timeout-minutes: 10
    runs-on: 'macos-latest'
    strategy:
      fail-fast: false
      matrix:
        python: ['3.7', '3.8', '3.9', '3.10']
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '${{ matrix.python }}'
      - name: Run tests
        run: ./ci.sh
        env:
          # Should match 'name:' up above
          JOB_NAME: 'macOS (${{ matrix.python }})'
